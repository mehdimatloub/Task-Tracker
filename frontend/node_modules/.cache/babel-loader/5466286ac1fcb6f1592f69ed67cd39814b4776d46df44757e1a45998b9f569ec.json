{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehdi\\\\Downloads\\\\task_management_project\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getTasks } from '../api';\nimport TaskItem from './TaskItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const refreshTasks = async () => {\n    try {\n      const data = await getTasks();\n      setTasks(data);\n    } catch (error) {\n      var _error$response;\n      console.error('Error fetching tasks:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  };\n  useEffect(() => {\n    refreshTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-list\",\n    children: tasks.length > 0 ? tasks.map(task => /*#__PURE__*/_jsxDEV(TaskItem, {\n      task: task\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 37\n    }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskList, \"bBd6yqkqV9dlkj9ENgRyXKaiXpk=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useEffect","useState","getTasks","TaskItem","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","refreshTasks","data","error","_error$response","console","response","message","className","children","length","map","task","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/mehdi/Downloads/task_management_project/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { getTasks } from '../api';\nimport TaskItem from './TaskItem';\n\nconst TaskList = () => {\n    const [tasks, setTasks] = useState([]);\n\n    const refreshTasks = async () => {\n        try {\n            const data = await getTasks();\n            setTasks(data);\n        } catch (error) {\n            console.error('Error fetching tasks:', error.response?.data || error.message);\n        }\n    };\n\n    useEffect(() => {\n        refreshTasks();\n    }, []);\n\n    return (\n        <div className=\"task-list\">\n            {tasks.length > 0 ? (\n                tasks.map((task) => <TaskItem key={task.id} task={task} />)\n            ) : (\n                <p>No tasks available</p>\n            )}\n        </div>\n    );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,QAAQ;AACjC,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEtC,MAAMS,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,IAAI,GAAG,MAAMT,QAAQ,CAAC,CAAC;MAC7BO,QAAQ,CAACE,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOC,KAAK,EAAE;MAAA,IAAAC,eAAA;MACZC,OAAO,CAACF,KAAK,CAAC,uBAAuB,EAAE,EAAAC,eAAA,GAAAD,KAAK,CAACG,QAAQ,cAAAF,eAAA,uBAAdA,eAAA,CAAgBF,IAAI,KAAIC,KAAK,CAACI,OAAO,CAAC;IACjF;EACJ,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACZU,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKY,SAAS,EAAC,WAAW;IAAAC,QAAA,EACrBV,KAAK,CAACW,MAAM,GAAG,CAAC,GACbX,KAAK,CAACY,GAAG,CAAEC,IAAI,iBAAKhB,OAAA,CAACF,QAAQ;MAAekB,IAAI,EAAEA;IAAK,GAApBA,IAAI,CAACC,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAe,CAAC,CAAC,gBAE3DrB,OAAA;MAAAa,QAAA,EAAG;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG;EAC3B;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAACnB,EAAA,CAzBID,QAAQ;AAAAqB,EAAA,GAARrB,QAAQ;AA2Bd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}