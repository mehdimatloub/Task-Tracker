{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehdi\\\\Downloads\\\\task_management_project\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport CategoryList from './components/CategoryList';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AddCategoryForm from './components/AddCategoryForm';\nimport { getCategories } from './api';\nimport './styles.css'; // Assurez-vous que ce fichier correspond à la maquette\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [categories, setCategories] = useState([]);\n\n  // Fonction pour rafraîchir les catégories depuis l'API\n  const refreshCategories = async () => {\n    const data = await getCategories();\n    setCategories(data);\n  };\n  useEffect(() => {\n    refreshCategories(); // Récupère les catégories lors du chargement\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CategoryList, {\n      categories: categories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TaskList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddTaskForm, {\n      refreshTasks: () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(AddCategoryForm, {\n      refreshCategories: refreshCategories\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"+ijgB8ROEl0Dkz53OTIi8GynN6s=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","Header","CategoryList","TaskList","AddTaskForm","AddCategoryForm","getCategories","jsxDEV","_jsxDEV","App","_s","categories","setCategories","refreshCategories","data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","refreshTasks","_c","$RefreshReg$"],"sources":["C:/Users/mehdi/Downloads/task_management_project/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Header from './components/Header';\nimport CategoryList from './components/CategoryList';\nimport TaskList from './components/TaskList';\nimport AddTaskForm from './components/AddTaskForm';\nimport AddCategoryForm from './components/AddCategoryForm';\nimport { getCategories } from './api';\nimport './styles.css'; // Assurez-vous que ce fichier correspond à la maquette\n\nconst App = () => {\n    const [categories, setCategories] = useState([]);\n\n    // Fonction pour rafraîchir les catégories depuis l'API\n    const refreshCategories = async () => {\n        const data = await getCategories();\n        setCategories(data);\n    };\n\n    useEffect(() => {\n        refreshCategories(); // Récupère les catégories lors du chargement\n    }, []);\n\n    return (\n        <div className=\"container\">\n            {/* Header : Contient le titre et potentiellement des informations supplémentaires */}\n            <Header />\n\n            {/* Liste des catégories */}\n            <CategoryList categories={categories} />\n\n            {/* Liste des tâches */}\n            <TaskList />\n\n            {/* Formulaire pour ajouter des tâches */}\n            <AddTaskForm refreshTasks={() => {}} />\n\n            {/* Formulaire pour ajouter des catégories */}\n            <AddCategoryForm refreshCategories={refreshCategories} />\n        </div>\n    );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,YAAY,MAAM,2BAA2B;AACpD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,eAAe,MAAM,8BAA8B;AAC1D,SAASC,aAAa,QAAQ,OAAO;AACrC,OAAO,cAAc,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEvB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAMa,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IAClC,MAAMC,IAAI,GAAG,MAAMR,aAAa,CAAC,CAAC;IAClCM,aAAa,CAACE,IAAI,CAAC;EACvB,CAAC;EAEDf,SAAS,CAAC,MAAM;IACZc,iBAAiB,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIL,OAAA;IAAKO,SAAS,EAAC,WAAW;IAAAC,QAAA,gBAEtBR,OAAA,CAACP,MAAM;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGVZ,OAAA,CAACN,YAAY;MAACS,UAAU,EAAEA;IAAW;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGxCZ,OAAA,CAACL,QAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGZZ,OAAA,CAACJ,WAAW;MAACiB,YAAY,EAAEA,CAAA,KAAM,CAAC;IAAE;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAGvCZ,OAAA,CAACH,eAAe;MAACQ,iBAAiB,EAAEA;IAAkB;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACV,EAAA,CA/BID,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}