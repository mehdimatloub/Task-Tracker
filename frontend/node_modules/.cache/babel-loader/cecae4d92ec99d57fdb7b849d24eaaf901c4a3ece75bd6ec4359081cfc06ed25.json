{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mehdi\\\\Downloads\\\\task_management_project\\\\frontend\\\\src\\\\components\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskList = () => {\n  _s();\n  const [tasks, setTasks] = useState([{\n    name: \"Email Check\",\n    completed: true\n  }, {\n    name: \"Weekly Meeting\",\n    completed: false\n  }, {\n    name: \"Team Discussion\",\n    completed: false\n  }]);\n  const handleCompleteAll = () => {\n    const updatedTasks = tasks.map(task => ({\n      ...task,\n      completed: true\n    }));\n    setTasks(updatedTasks);\n    alert(\"All tasks completed!\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"right-column\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-list\",\n      children: [tasks.map((task, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: task.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          checked: task.completed,\n          onChange: () => {\n            const updatedTasks = [...tasks];\n            updatedTasks[idx].completed = !updatedTasks[idx].completed;\n            setTasks(updatedTasks);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCompleteAll,\n        children: \"End All Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(TaskList, \"f2ugTuzEm+L61PVYh9OaAA/ZDFE=\");\n_c = TaskList;\nexport default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","name","completed","handleCompleteAll","updatedTasks","map","task","alert","className","children","idx","fileName","_jsxFileName","lineNumber","columnNumber","type","checked","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/mehdi/Downloads/task_management_project/frontend/src/components/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst TaskList = () => {\n  const [tasks, setTasks] = useState([\n    { name: \"Email Check\", completed: true },\n    { name: \"Weekly Meeting\", completed: false },\n    { name: \"Team Discussion\", completed: false },\n  ]);\n\n  const handleCompleteAll = () => {\n    const updatedTasks = tasks.map((task) => ({ ...task, completed: true }));\n    setTasks(updatedTasks);\n    alert(\"All tasks completed!\");\n  };\n\n  return (\n    <div className=\"right-column\">\n      <div className=\"task-list\">\n        {tasks.map((task, idx) => (\n          <div key={idx} className=\"task-item\">\n            <span>{task.name}</span>\n            <input\n              type=\"checkbox\"\n              checked={task.completed}\n              onChange={() => {\n                const updatedTasks = [...tasks];\n                updatedTasks[idx].completed = !updatedTasks[idx].completed;\n                setTasks(updatedTasks);\n              }}\n            />\n          </div>\n        ))}\n        <button onClick={handleCompleteAll}>End All Task</button>\n      </div>\n    </div>\n  );\n};\n\nexport default TaskList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAK,CAAC,EACxC;IAAED,IAAI,EAAE,gBAAgB;IAAEC,SAAS,EAAE;EAAM,CAAC,EAC5C;IAAED,IAAI,EAAE,iBAAiB;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC9C,CAAC;EAEF,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC9B,MAAMC,YAAY,GAAGL,KAAK,CAACM,GAAG,CAAEC,IAAI,KAAM;MAAE,GAAGA,IAAI;MAAEJ,SAAS,EAAE;IAAK,CAAC,CAAC,CAAC;IACxEF,QAAQ,CAACI,YAAY,CAAC;IACtBG,KAAK,CAAC,sBAAsB,CAAC;EAC/B,CAAC;EAED,oBACEX,OAAA;IAAKY,SAAS,EAAC,cAAc;IAAAC,QAAA,eAC3Bb,OAAA;MAAKY,SAAS,EAAC,WAAW;MAAAC,QAAA,GACvBV,KAAK,CAACM,GAAG,CAAC,CAACC,IAAI,EAAEI,GAAG,kBACnBd,OAAA;QAAeY,SAAS,EAAC,WAAW;QAAAC,QAAA,gBAClCb,OAAA;UAAAa,QAAA,EAAOH,IAAI,CAACL;QAAI;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACxBlB,OAAA;UACEmB,IAAI,EAAC,UAAU;UACfC,OAAO,EAAEV,IAAI,CAACJ,SAAU;UACxBe,QAAQ,EAAEA,CAAA,KAAM;YACd,MAAMb,YAAY,GAAG,CAAC,GAAGL,KAAK,CAAC;YAC/BK,YAAY,CAACM,GAAG,CAAC,CAACR,SAAS,GAAG,CAACE,YAAY,CAACM,GAAG,CAAC,CAACR,SAAS;YAC1DF,QAAQ,CAACI,YAAY,CAAC;UACxB;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA,GAVMJ,GAAG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWR,CACN,CAAC,eACFlB,OAAA;QAAQsB,OAAO,EAAEf,iBAAkB;QAAAM,QAAA,EAAC;MAAY;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAChB,EAAA,CAlCID,QAAQ;AAAAsB,EAAA,GAARtB,QAAQ;AAoCd,eAAeA,QAAQ;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}